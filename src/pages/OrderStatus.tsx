
import { useState, useEffect } from "react";
import Header from "@/components/Header";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Badge } from "@/components/ui/badge";
import { Search, Package, Truck, CheckCircle, Clock, AlertCircle, ExternalLink } from "lucide-react";

const OrderStatus = () => {
  const [orderNumber, setOrderNumber] = useState('');
  const [searchResult, setSearchResult] = useState(null);
  const [ordersData, setOrdersData] = useState([]);
  const [loading, setLoading] = useState(false);

  // Google Sheets API integration
  const SHEET_ID = '1eVQgmf07HGO5x6T0CLXwFrkMLDF5QWPqV1C4TcfZHz4';
  const SHEET_NAME = 'Sheet1';
  const API_KEY = 'AIzaSyBH8-your-api-key'; // User needs to add their API key

  useEffect(() => {
    fetchOrdersFromGoogleSheets();
  }, []);

  const fetchOrdersFromGoogleSheets = async () => {
    try {
      setLoading(true);
      // For demo purposes, using mock data since API key is needed
      const mockSheetData = [
        {
          orderNumber: 'SPXTH04722225606',
          customerName: 'Wishyoulucky',
          productName: 'Infinity Studio - Gwen Statue Limited Edition ‡∏´‡∏≤‡∏£‡πÄ‡∏™‡∏∑‡πâ‡∏≠ 3 ‡∏ï‡∏±‡∏ß Zoe:S üíú ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏°‡∏ü‡∏¥‡∏ß‡πÇ‡∏£‡πà Kuromi The Witch\'s Feast (‡∏¢‡∏Å‡∏ö‡πä‡∏≠‡∏Å 8‡∏•‡∏¥‡∏°) Sanrio TOPTOY üíú',
          status: '‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß',
          price: '‡∏ø1',
          sku: '1',
          quantity: '1',
          shippingCost: '‡∏ø0',
          trackingNumber: 'SPXTH04722225606',
          orderDate: 'today',
          progress: '0% ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô',
          statusColor: 'purple'
        }
      ];
      setOrdersData(mockSheetData);
    } catch (error) {
      console.error('Error fetching data from Google Sheets:', error);
      // Fallback to mock data
      setOrdersData([
        {
          orderNumber: 'SPXTH04722225606',
          customerName: 'Wishyoulucky',
          productName: 'Infinity Studio - Gwen Statue Limited Edition ‡∏´‡∏≤‡∏£‡πÄ‡∏™‡∏∑‡πâ‡∏≠ 3 ‡∏ï‡∏±‡∏ß Zoe:S üíú ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏°‡∏ü‡∏¥‡∏ß‡πÇ‡∏£‡πà Kuromi The Witch\'s Feast (‡∏¢‡∏Å‡∏ö‡πä‡∏≠‡∏Å 8‡∏•‡∏¥‡∏°) Sanrio TOPTOY üíú',
          status: '‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß',
          price: '‡∏ø1',
          sku: '1',
          quantity: '1',
          shippingCost: '‡∏ø0',
          trackingNumber: 'SPXTH04722225606',
          orderDate: 'today',
          progress: '0% ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô',
          statusColor: 'purple'
        }
      ]);
    } finally {
      setLoading(false);
    }
  };

  const handleSearch = () => {
    if (orderNumber) {
      const foundOrder = ordersData.find(order => 
        order.orderNumber.toLowerCase().includes(orderNumber.toLowerCase()) ||
        order.trackingNumber?.toLowerCase().includes(orderNumber.toLowerCase())
      );
      setSearchResult(foundOrder || null);
    }
  };

  const getStatusIcon = (status) => {
    switch (status) {
      case '‡∏£‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô':
        return <Clock className="h-4 w-4 text-yellow-500" />;
      case '‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß':
        return <CheckCircle className="h-4 w-4 text-purple-500" />;
      case '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á':
        return <Truck className="h-4 w-4 text-blue-500" />;
      case '‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß':
        return <CheckCircle className="h-4 w-4 text-green-500" />;
      case '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å':
        return <AlertCircle className="h-4 w-4 text-red-500" />;
      default:
        return <Package className="h-4 w-4 text-gray-500" />;
    }
  };

  const getStatusColor = (status, statusColor) => {
    if (statusColor === 'purple') {
      return 'bg-purple-100 text-purple-800 border-purple-200';
    }
    
    switch (status) {
      case '‡∏£‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô':
        return 'bg-yellow-100 text-yellow-800 border-yellow-200';
      case '‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß':
        return 'bg-purple-100 text-purple-800 border-purple-200';
      case '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á':
        return 'bg-blue-100 text-blue-800 border-blue-200';
      case '‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß':
        return 'bg-green-100 text-green-800 border-green-200';
      case '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å':
        return 'bg-red-100 text-red-800 border-red-200';
      default:
        return 'bg-gray-100 text-gray-800 border-gray-200';
    }
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <Header />
      
      <div className="max-w-7xl mx-auto px-4 py-8">
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-2">‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h1>
          <p className="text-gray-600">‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</p>
        </div>

        {/* Search Section */}
        <Card className="mb-8">
          <CardHeader>
            <CardTitle className="text-xl" style={{ color: '#956ec3' }}>‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="flex space-x-4">
              <Input
                type="text"
                placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå ‡πÄ‡∏ä‡πà‡∏ô SPXTH04722225606..."
                value={orderNumber}
                onChange={(e) => setOrderNumber(e.target.value)}
                className="flex-1"
                onKeyPress={(e) => e.key === 'Enter' && handleSearch()}
              />
              <Button 
                onClick={handleSearch}
                disabled={loading}
                style={{ backgroundColor: '#956ec3' }}
                className="hover:opacity-90"
              >
                <Search className="h-4 w-4 mr-2" />
                ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
              </Button>
            </div>
          </CardContent>
        </Card>

        {/* Search Result */}
        {searchResult && (
          <Card className="mb-8" style={{ borderColor: '#956ec3' }}>
            <CardHeader>
              <div className="flex items-start justify-between">
                <div className="flex-1">
                  <div className="flex items-center space-x-2 mb-2">
                    <CardTitle className="text-lg" style={{ color: '#956ec3' }}>
                      ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå #{searchResult.orderNumber}
                    </CardTitle>
                    <Badge className={`${getStatusColor(searchResult.status, searchResult.statusColor)} border`}>
                      <div className="flex items-center space-x-1">
                        {getStatusIcon(searchResult.status)}
                        <span>{searchResult.status}</span>
                      </div>
                    </Badge>
                  </div>
                  <p className="text-gray-600">‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: {searchResult.customerName}</p>
                  <div className="mt-4">
                    <div className="bg-purple-100 p-3 rounded-lg">
                      <div className="text-sm font-medium text-purple-700 mb-1">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤</div>
                      <div className="text-lg font-bold text-purple-800">{searchResult.progress}</div>
                    </div>
                  </div>
                </div>
                <div className="ml-4">
                  <img 
                    src="/lovable-uploads/3a94bca0-09e6-4f37-bfc1-d924f4dc55b1.png" 
                    alt="Product" 
                    className="w-20 h-20 object-cover rounded-lg"
                  />
                </div>
              </div>
            </CardHeader>
            <CardContent className="space-y-6">
              {/* Product Details */}
              <div>
                <h4 className="font-semibold text-gray-800 mb-3">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h4>
                <div className="bg-gray-50 p-4 rounded-lg">
                  <h5 className="font-medium text-gray-800 mb-2">{searchResult.productName}</h5>
                  
                  <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-sm">
                    <div>
                      <span className="text-gray-600">‡∏£‡∏≤‡∏Ñ‡∏≤</span>
                      <p className="font-semibold" style={{ color: '#956ec3' }}>{searchResult.price}</p>
                    </div>
                    <div>
                      <span className="text-gray-600">SKU</span>
                      <p className="font-semibold">{searchResult.sku}</p>
                    </div>
                    <div>
                      <span className="text-gray-600">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</span>
                      <p className="font-semibold">{searchResult.quantity}</p>
                    </div>
                    <div>
                      <span className="text-gray-600">‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á</span>
                      <p className="font-semibold">{searchResult.shippingCost}</p>
                    </div>
                  </div>

                  {searchResult.trackingNumber && (
                    <div className="mt-4">
                      <span className="text-gray-600 text-sm">‡πÄ‡∏•‡∏Ç</span>
                      <div className="flex items-center space-x-2 mt-1">
                        <code className="bg-white px-3 py-1 rounded border text-sm font-mono">
                          {searchResult.trackingNumber}
                        </code>
                        <Button 
                          variant="outline" 
                          size="sm"
                          className="text-blue-600 hover:text-blue-800"
                        >
                          <ExternalLink className="h-4 w-4 mr-1" />
                          Link to Track And Trace : Thailand Post
                        </Button>
                      </div>
                    </div>
                  )}

                  <div className="mt-4 flex items-center space-x-2 text-sm text-gray-600">
                    <Clock className="h-4 w-4" />
                    <span>‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤: {searchResult.orderDate}</span>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        )}

        {searchResult === null && orderNumber && (
          <Card className="mb-8">
            <CardContent className="py-8 text-center">
              <AlertCircle className="h-12 w-12 text-gray-400 mx-auto mb-4" />
              <h3 className="text-lg font-semibold text-gray-700 mb-2">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå</h3>
              <p className="text-gray-500">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÅ‡∏•‡∏∞‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á</p>
            </CardContent>
          </Card>
        )}

        {/* All Orders */}
        <Card>
          <CardHeader>
            <CardTitle className="text-xl" style={{ color: '#956ec3' }}>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</CardTitle>
            {loading && <p className="text-sm text-gray-500">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheets...</p>}
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              {ordersData.map((order, index) => (
                <div key={index} className="border rounded-lg p-4 hover:bg-gray-50 transition-colors">
                  <div className="flex items-start justify-between">
                    <div className="flex-1">
                      <div className="flex items-center space-x-2 mb-2">
                        <h3 className="font-semibold" style={{ color: '#956ec3' }}>
                          #{order.orderNumber}
                        </h3>
                        <Badge className={`${getStatusColor(order.status, order.statusColor)} border`}>
                          <div className="flex items-center space-x-1">
                            {getStatusIcon(order.status)}
                            <span>{order.status}</span>
                          </div>
                        </Badge>
                      </div>
                      <p className="text-sm text-gray-600 mb-1">‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: {order.customerName}</p>
                      <p className="text-sm text-gray-800 mb-2">{order.productName}</p>
                      <div className="text-sm text-gray-500">
                        ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {order.orderDate} | ‡∏£‡∏≤‡∏Ñ‡∏≤: {order.price} | ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {order.quantity}
                      </div>
                      {order.trackingNumber && (
                        <div className="mt-2">
                          <span className="text-xs text-gray-500">Tracking: </span>
                          <code className="bg-gray-100 px-2 py-1 rounded text-xs">
                            {order.trackingNumber}
                          </code>
                        </div>
                      )}
                    </div>
                    <div className="ml-4">
                      <img 
                        src="/lovable-uploads/3a94bca0-09e6-4f37-bfc1-d924f4dc55b1.png" 
                        alt="Product" 
                        className="w-16 h-16 object-cover rounded-lg"
                      />
                    </div>
                  </div>
                </div>
              ))}
            </div>

            {ordersData.length === 0 && !loading && (
              <div className="text-center py-8">
                <Package className="h-12 w-12 text-gray-400 mx-auto mb-4" />
                <p className="text-gray-500">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå</p>
              </div>
            )}
          </CardContent>
        </Card>

        {/* Instructions for Google Sheets Integration */}
        <Card className="mt-8 bg-blue-50 border-blue-200">
          <CardHeader>
            <CardTitle className="text-lg text-blue-800">‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Google Sheets API</CardTitle>
          </CardHeader>
          <CardContent className="text-sm text-blue-700">
            <p className="mb-2">‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheets ‡πÑ‡∏î‡πâ:</p>
            <ol className="list-decimal list-inside space-y-1">
              <li>‡∏™‡∏£‡πâ‡∏≤‡∏á Google Cloud Project ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Google Sheets API</li>
              <li>‡∏™‡∏£‡πâ‡∏≤‡∏á API Key ‡πÅ‡∏•‡∏∞‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î</li>
              <li>‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Google Sheets ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô Public ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏ä‡∏£‡πå‡∏Å‡∏±‡∏ö Service Account</li>
              <li>‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á Column mapping ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Sheet</li>
            </ol>
            <p className="mt-2 text-xs">
              ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Mock ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö - ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà API_KEY ‡∏î‡πâ‡∏ß‡∏¢ API Key ‡∏à‡∏£‡∏¥‡∏á
            </p>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default OrderStatus;
